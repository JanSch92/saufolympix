{% extends 'baselive.html.twig' %}

{% block title %}Punktetausch Joker - {{ player.name }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .game-option, .player-option {
            background: rgba(30, 41, 59, 0.7);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(71, 85, 105, 0.3);
            border-radius: 1rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            cursor: pointer;
        }
        
        .game-option:hover, .player-option:hover {
            border-color: rgba(59, 130, 246, 0.3);
            box-shadow: 0 8px 25px -5px rgba(0, 0, 0, 0.2);
            transform: translateY(-2px);
        }
        
        .game-option.selected, .player-option.selected {
            border-color: rgba(16, 185, 129, 0.5);
            background: rgba(16, 185, 129, 0.1);
            box-shadow: 0 8px 25px -5px rgba(16, 185, 129, 0.3);
        }
        
        .game-option.disabled {
            opacity: 0.5;
            cursor: not-allowed;
            border-color: rgba(239, 68, 68, 0.3);
            background: rgba(239, 68, 68, 0.1);
        }
        
        .game-option.disabled:hover {
            transform: none;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        }
        
        .player-option.disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .player-option.disabled:hover {
            transform: none;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            border-color: rgba(71, 85, 105, 0.3);
        }
        
        .game-type-icon {
            width: 3rem;
            height: 3rem;
            border-radius: 0.75rem;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
        }
        
        .player-avatar {
            width: 3rem;
            height: 3rem;
            border-radius: 0.75rem;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
            font-weight: bold;
            color: white;
            background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
        }
        
        .step-indicator {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }
        
        .step-dot {
            width: 0.75rem;
            height: 0.75rem;
            border-radius: 50%;
            background: rgba(71, 85, 105, 0.3);
            transition: all 0.3s ease;
        }
        
        .step-dot.active {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        }
        
        .step-dot.completed {
            background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
        }
        
        .step-content {
            display: none;
            flex: 1;
            flex-direction: column;
            overflow: hidden;
        }
        
        .step-content.active {
            display: flex;
        }
        
        /* Mobile-optimierte Container */
        .main-container {
            height: 100vh;
            overflow: hidden;
            display: flex;
            flex-direction: column;
        }
        
        .form-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }
        
        .step-header {
            flex-shrink: 0;
            padding: 1rem;
            padding-bottom: 0.5rem;
        }
        
        .scrollable-content {
            flex: 1;
            overflow-y: auto;
            padding: 1rem;
            padding-top: 0;
            padding-bottom: 6rem; /* Platz für Mobile Navigation */
            -webkit-overflow-scrolling: touch;
        }
        
        .scrollable-content::-webkit-scrollbar {
            width: 6px;
        }
        
        .scrollable-content::-webkit-scrollbar-track {
            background: rgba(30, 41, 59, 0.3);
        }
        
        .scrollable-content::-webkit-scrollbar-thumb {
            background: rgba(71, 85, 105, 0.6);
            border-radius: 3px;
        }
        
        .scrollable-content::-webkit-scrollbar-thumb:hover {
            background: rgba(71, 85, 105, 0.8);
        }
        
        .mobile-nav {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            height: 4rem;
            background: rgba(30, 41, 59, 0.95);
            backdrop-filter: blur(20px);
            border-top: 1px solid rgba(71, 85, 105, 0.3);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 50;
            gap: 1rem;
        }
        
        .mobile-nav a {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            color: #94a3b8;
            text-decoration: none;
            transition: all 0.3s ease;
            padding: 0.5rem;
            border-radius: 0.5rem;
            min-width: 60px;
        }
        
        .mobile-nav a.active {
            color: #10b981;
        }
        
        .mobile-nav a:hover {
            background: rgba(71, 85, 105, 0.2);
        }
        
        .mobile-nav .nav-apply {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white !important;
            padding: 0.75rem 1rem;
            border-radius: 0.75rem;
            font-weight: 600;
            transition: all 0.3s ease;
            cursor: pointer;
            border: none;
            min-width: auto;
        }
        
        .mobile-nav .nav-apply:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(16, 185, 129, 0.4);
            background: linear-gradient(135deg, #059669 0%, #047857 100%);
        }
        
        .mobile-nav .nav-apply:disabled {
            background: rgba(71, 85, 105, 0.6);
            color: #94a3b8;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .mobile-nav .nav-apply:disabled:hover {
            transform: none;
            box-shadow: none;
            background: rgba(71, 85, 105, 0.6);
        }
        
        /* Responsive Anpassungen */
        @media (max-width: 768px) {
            .step-header {
                padding: 0.75rem;
                padding-bottom: 0.25rem;
            }
            
            .scrollable-content {
                padding: 0.75rem;
                padding-top: 0;
                padding-bottom: 5rem;
            }
            
            .game-option, .player-option {
                padding: 0.75rem;
            }
            
            .game-type-icon, .player-avatar {
                width: 2.5rem;
                height: 2.5rem;
                font-size: 1.25rem;
            }
            
            .mobile-nav {
                gap: 0.5rem;
            }
            
            .mobile-nav .nav-apply {
                padding: 0.5rem 0.75rem;
                font-size: 0.875rem;
            }
        }
        
        @media (max-width: 480px) {
            .step-header {
                padding: 0.5rem;
                padding-bottom: 0.25rem;
            }
            
            .scrollable-content {
                padding: 0.5rem;
                padding-top: 0;
                padding-bottom: 4.5rem;
            }
            
            .step-indicator {
                gap: 0.25rem;
            }
            
            .mobile-nav {
                gap: 0.25rem;
            }
            
            .mobile-nav .nav-apply {
                padding: 0.5rem;
                font-size: 0.8rem;
            }
        }
    </style>
{% endblock %}

{% block body %}
<div class="main-container bg-slate-900 text-slate-100">

    <!-- Header -->
    <header class="flex-shrink-0 h-16 flex items-center justify-between px-4 bg-slate-800/50 backdrop-blur-xl border-b border-slate-700/50">
        <div class="flex items-center space-x-3">
            <div class="w-8 h-8 bg-gradient-to-br from-emerald-500 to-teal-500 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4"></path>
                </svg>
            </div>
            <div>
                <h1 class="text-lg font-bold gradient-text">⇄ Punktetausch Joker</h1>
                <p class="text-xs text-slate-400">{{ player.name }}</p>
            </div>
        </div>
        
        <div class="flex items-center space-x-2">
            <span class="text-sm font-medium text-slate-300">{{ player.totalPoints }}</span>
            <span class="text-xs text-slate-500">Punkte</span>
        </div>
    </header>

    {% if available_games_with_status is empty %}
        <!-- No Games Available -->
        <div class="flex-1 flex items-center justify-center p-4">
            <div class="professional-card p-8 text-center max-w-md w-full">
                <div class="w-16 h-16 bg-gradient-to-br from-red-500 to-rose-500 rounded-2xl flex items-center justify-center mx-auto mb-4">
                    <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L5.636 5.636"></path>
                    </svg>
                </div>
                <h2 class="text-xl font-bold text-slate-200 mb-2">Keine Spiele verfügbar</h2>
                <p class="text-slate-400 text-sm mb-6">Alle Spiele bereits verwendet oder keine zukünftigen Spiele</p>
            </div>
        </div>
    {% else %}
        <form action="{{ path('app_player_joker_swap', {olympixId: olympix.id, playerId: player.id}) }}" 
              method="POST" 
              id="swapForm" 
              class="form-container">
            
            <!-- Step Indicator -->
            <div class="flex-shrink-0 p-4 pb-2">
                <div class="step-indicator">
                    <div class="step-dot active" id="step1-dot"></div>
                    <div class="step-dot" id="step2-dot"></div>
                </div>
            </div>
            
            <!-- Step 1: Game Selection -->
            <div class="step-content active" id="step1">
                <div class="step-header">
                    <h2 class="text-lg font-semibold text-slate-200 mb-1">Spiel auswählen</h2>
                    <p class="text-sm text-slate-400">Wähle ein zukünftiges Spiel für den Punktetausch</p>
                </div>
                
                <div class="scrollable-content">
                    <div class="space-y-3" style="margin-bottom: 50px;">
                        {% for gameData in available_games_with_status %}
                            {% if gameData.game.gameType != 'split_or_steal' %}
                                <label class="game-option block p-4 {% if gameData.has_swap %}disabled{% endif %}" 
                                       for="game_{{ gameData.game.id }}">
                                    <input type="radio" 
                                           id="game_{{ gameData.game.id }}"
                                           name="selected_game_id" 
                                           value="{{ gameData.game.id }}"
                                           class="hidden"
                                           {% if gameData.has_swap %}disabled{% endif %}
                                           onchange="selectGame(this, {{ gameData.game.id }})">
                                    
                                    <div class="flex items-center space-x-4">
                                        <div class="game-type-icon">
                                            {% if gameData.game.gameType == 'tournament_team' or gameData.game.gameType == 'tournament_single' %}
                                                🏆
                                            {% elseif gameData.game.gameType == 'quiz' %}
                                                🧠
                                            {% else %}
                                                🎯
                                            {% endif %}
                                        </div>
                                        
                                        <div class="flex-1 min-w-0">
                                            <div class="font-semibold text-slate-100 text-lg truncate">{{ gameData.game.name }}</div>
                                            <div class="text-sm text-slate-400 mt-1">{{ gameData.game.gameTypeLabel }}</div>
                                            {% if gameData.has_swap %}
                                                <div class="text-sm text-red-400 font-medium mt-1">⇄ Joker bereits verwendet</div>
                                            {% else %}
                                                <div class="text-sm text-emerald-400 font-medium mt-1">⇄ Joker verfügbar</div>
                                            {% endif %}
                                        </div>
                                    </div>
                                </label>
                            {% endif %}
                        {% endfor %}
                    </div>
                </div>
            </div>
            
            <!-- Step 2: Player Selection -->
            <div class="step-content" id="step2">
                <div class="step-header">
                    <h2 class="text-lg font-semibold text-slate-200 mb-1">Spieler auswählen</h2>
                    <p class="text-sm text-slate-400" id="selectedGameInfo">Tausch-Partner auswählen</p>
                </div>
                
                <div class="scrollable-content">
                    <div class="space-y-3" style="margin-bottom: 50px;">
                        {% for availablePlayer in available_players %}
                            <label class="player-option block p-4 disabled" 
                                   for="player_{{ availablePlayer.id }}"
                                   data-player-id="{{ availablePlayer.id }}">
                                <input type="radio" 
                                       id="player_{{ availablePlayer.id }}"
                                       name="target_player_id" 
                                       value="{{ availablePlayer.id }}"
                                       class="hidden"
                                       disabled
                                       onchange="selectPlayer(this)">
                                
                                <div class="flex items-center space-x-4">
                                    <div class="player-avatar">
                                        {{ availablePlayer.name|first|upper }}
                                    </div>
                                    
                                    <div class="flex-1 min-w-0">
                                        <div class="font-semibold text-slate-100 text-lg truncate">{{ availablePlayer.name }}</div>
                                        <div class="text-sm text-slate-400 mt-1">{{ availablePlayer.totalPoints }} Punkte</div>
                                    </div>
                                    
                                    <div class="text-right">
                                        <div class="text-2xl">⇄</div>
                                    </div>
                                </div>
                            </label>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </form>
    {% endif %}

    <!-- Mobile Navigation -->
    <div class="mobile-nav">
        <a href="{{ path('app_player_dashboard', {olympixId: olympix.id, playerId: player.id}) }}">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
            </svg>
            <span class="text-xs">Dashboard</span>
        </a>
        
        <button type="button" 
                class="nav-apply" 
                id="navApplyBtn"
                disabled
                onclick="submitForm()">
            <span class="text-xs">⇄ Anwenden</span>
        </button>
    </div>
</div>

<script>
    let selectedGameId = null;
    let selectedPlayerId = null;
    let gameData = {};
    
    {% for gameData in available_games_with_status %}
        {% if gameData.game.gameType != 'split_or_steal' %}
            gameData[{{ gameData.game.id }}] = {
                name: "{{ gameData.game.name }}",
                gameType: "{{ gameData.game.gameType }}",
                hasSwap: {{ gameData.has_swap ? 'true' : 'false' }}
            };
        {% endif %}
    {% endfor %}
    
    function selectGame(radio, gameId) {
        selectedGameId = gameId;
        
        document.querySelectorAll('.game-option').forEach(option => {
            option.classList.remove('selected');
        });
        radio.closest('.game-option').classList.add('selected');
        
        document.getElementById('step1').classList.remove('active');
        document.getElementById('step2').classList.add('active');
        
        document.getElementById('step1-dot').classList.remove('active');
        document.getElementById('step1-dot').classList.add('completed');
        document.getElementById('step2-dot').classList.add('active');
        
        const game = gameData[gameId];
        document.getElementById('selectedGameInfo').textContent = `Ausgewähltes Spiel: ${game.name}`;
        
        document.querySelectorAll('.player-option').forEach(option => {
            option.classList.remove('disabled');
            option.querySelector('input').disabled = false;
        });
        
        selectedPlayerId = null;
        updateNavButton();
    }
    
    function selectPlayer(radio) {
        selectedPlayerId = radio.value;
        
        document.querySelectorAll('.player-option').forEach(option => {
            option.classList.remove('selected');
        });
        radio.closest('.player-option').classList.add('selected');
        
        updateNavButton();
    }
    
    function updateNavButton() {
        const navBtn = document.getElementById('navApplyBtn');
        navBtn.disabled = !(selectedGameId && selectedPlayerId);
    }
    
    function submitForm() {
        if (!selectedGameId || !selectedPlayerId) {
            return;
        }
        
        // Einfach das Form direkt submitten
        document.getElementById('swapForm').submit();
    }
</script>
{% endblock %}
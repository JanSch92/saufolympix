<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ olympix.name }} - Spieler-Zugang</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        .player-card {
            transform: translateY(0);
            transition: all 0.3s ease;
        }
        .player-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        .selected-player {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
        }
        .pulse-animation {
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.7; }
        }
    </style>
</head>
<body class="flex items-center justify-center p-4">
    <div class="bg-white rounded-lg shadow-xl p-8 w-full max-w-md">
        <div class="text-center mb-6">
            <h1 class="text-3xl font-bold text-gray-800 mb-2">üèÜ {{ olympix.name }}</h1>
            <p class="text-gray-600">W√§hle deinen Namen</p>
        </div>
        
        <div id="player-selection" class="space-y-3">
            {% for player in olympix.players %}
                <button onclick="selectPlayer({{ player.id }}, '{{ player.name|e('js') }}', {{ player.totalPoints }})" 
                        class="player-card w-full p-4 bg-blue-50 hover:bg-blue-100 rounded-lg border-2 border-blue-200 hover:border-blue-400 transition-all text-left">
                    <div class="flex items-center justify-between">
                        <div>
                            <div class="font-semibold text-gray-800">{{ player.name }}</div>
                            <div class="text-sm text-gray-600">{{ player.totalPoints }} Punkte</div>
                        </div>
                        <div class="text-blue-600 font-bold text-lg">
                            {% set position = 1 %}
                            {% for p in olympix.players %}
                                {% if p.totalPoints > player.totalPoints %}
                                    {% set position = position + 1 %}
                                {% endif %}
                            {% endfor %}
                            #{{ position }}
                        </div>
                    </div>
                </button>
            {% endfor %}
        </div>
        
        <div id="selected-info" class="hidden mt-6 p-4 bg-green-50 border-2 border-green-200 rounded-lg">
            <div class="flex items-center justify-between mb-3">
                <div>
                    <div class="font-semibold text-green-800">Ausgew√§hlt:</div>
                    <div id="selected-name" class="text-green-700"></div>
                </div>
                <button onclick="resetSelection()" class="text-green-600 hover:text-green-800 font-medium">
                    √Ñndern
                </button>
            </div>
            <button onclick="goToDashboard()" class="w-full bg-green-600 hover:bg-green-700 text-white font-medium py-3 px-4 rounded-lg transition-colors">
                Zum Dashboard ‚Üí
            </button>
        </div>
        
        <div class="mt-6 text-center text-sm text-gray-500">
            <p>Dein Name wird gespeichert und beim n√§chsten Besuch automatisch ausgew√§hlt</p>
        </div>
        
        <div id="loading" class="hidden mt-6 text-center">
            <div class="pulse-animation text-blue-600">
                <div class="text-lg">üéÆ</div>
                <div class="text-sm">Lade Dashboard...</div>
            </div>
        </div>
    </div>

    <script>
        const olympixId = {{ olympix.id }};
        const storageKey = `olympix_${olympixId}_selected_player`;
        let selectedPlayerData = null;
        
        // Check if player is already selected
        window.addEventListener('DOMContentLoaded', function() {
            const storedPlayer = localStorage.getItem(storageKey);
            if (storedPlayer) {
                try {
                    const playerData = JSON.parse(storedPlayer);
                    // Check if the data is not too old (24 hours)
                    const twentyFourHoursAgo = Date.now() - (24 * 60 * 60 * 1000);
                    if (playerData.timestamp && playerData.timestamp > twentyFourHoursAgo) {
                        selectedPlayerData = playerData;
                        showSelectedPlayer(playerData.name, playerData.points);
                    } else {
                        // Data is too old, remove it
                        localStorage.removeItem(storageKey);
                    }
                } catch (e) {
                    console.error('Error parsing stored player data:', e);
                    localStorage.removeItem(storageKey);
                }
            }
        });
        
        function selectPlayer(playerId, playerName, playerPoints) {
            selectedPlayerData = {
                id: playerId,
                name: playerName,
                points: playerPoints,
                timestamp: Date.now()
            };
            
            localStorage.setItem(storageKey, JSON.stringify(selectedPlayerData));
            showSelectedPlayer(playerName, playerPoints);
        }
        
        function showSelectedPlayer(name, points) {
            document.getElementById('player-selection').style.display = 'none';
            document.getElementById('selected-info').classList.remove('hidden');
            document.getElementById('selected-name').textContent = `${name} (${points} Punkte)`;
        }
        
        function resetSelection() {
            selectedPlayerData = null;
            localStorage.removeItem(storageKey);
            document.getElementById('player-selection').style.display = 'block';
            document.getElementById('selected-info').classList.add('hidden');
            document.getElementById('loading').classList.add('hidden');
        }
        
        function goToDashboard() {
            if (selectedPlayerData && selectedPlayerData.id) {
                document.getElementById('selected-info').classList.add('hidden');
                document.getElementById('loading').classList.remove('hidden');
                
                console.log('Weiterleitung zu:', `/player-dashboard/${olympixId}/${selectedPlayerData.id}`);
                
                // Small delay to show loading animation
                setTimeout(() => {
                    window.location.href = `/player-dashboard/${olympixId}/${selectedPlayerData.id}`;
                }, 500);
            } else {
                alert('Fehler: Kein Spieler ausgew√§hlt');
                resetSelection();
            }
        }
        
        // Handle back button to refresh player data
        window.addEventListener('pageshow', function(event) {
            if (event.persisted) {
                location.reload();
            }
        });
    </script>
</body>
</html>
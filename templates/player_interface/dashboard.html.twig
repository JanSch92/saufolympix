<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ player.name }} - {{ olympix.name }}</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        
        .player-card {
            background: white;
            border-radius: 1rem;
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
        }
        
        .btn-joker {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .btn-joker:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(240, 147, 251, 0.4);
        }
        
        .btn-joker:disabled {
            background: #e5e7eb;
            color: #9ca3af;
            transform: none;
            box-shadow: none;
        }
    </style>
</head>
<body class="p-4">
    <div class="max-w-md mx-auto space-y-4">
        <!-- Header -->
        <div class="player-card p-6">
            <div class="text-center">
                <h1 class="text-2xl font-bold text-gray-800">{{ player.name }}</h1>
                <p class="text-gray-600">{{ olympix.name }}</p>
            </div>
        </div>
        
        <!-- Meine Punkte -->
        <div class="player-card p-6">
            <h2 class="text-lg font-bold text-gray-800 mb-4">üìä Meine Punkte</h2>
            <div class="text-center">
                <div class="text-4xl font-bold text-blue-600 mb-2">{{ player.totalPoints }}</div>
                <div class="text-sm text-gray-600">
                    {% set position = 0 %}
                    {% for p in players %}
                        {% if p.id == player.id %}
                            {% set position = loop.index %}
                        {% endif %}
                    {% endfor %}
                    Platz {{ position }} von {{ players|length }}
                </div>
            </div>
        </div>
        
        <!-- Joker -->
        <div class="player-card p-6">
            <h2 class="text-lg font-bold text-gray-800 mb-4">üÉè Meine Joker</h2>
            
            <div class="space-y-3">
                <!-- Doppelte Punkte -->
                <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                    <div>
                        <div class="font-medium text-gray-800">Doppelte Punkte</div>
                        <div class="text-sm text-gray-600">Verdoppelt Punkte f√ºr kommendes Spiel</div>
                    </div>
                    <div>
                        {% if can_use_double_joker %}
                            <a href="{{ path('app_player_joker_double', {olympixId: olympix.id, playerId: player.id}) }}" 
                               class="btn-joker text-sm"
                               onclick="return confirm('Doppelte Punkte Joker wirklich einsetzen?')">
                                üî• Einsetzen
                            </a>
                        {% elseif not player.hasJokerDoubleAvailable %}
                            <span class="text-sm text-gray-500">‚úó Verwendet</span>
                        {% else %}
                            <span class="text-sm text-gray-500">‚è≥ Kein aktives Spiel</span>
                        {% endif %}
                    </div>
                </div>
                
                <!-- Punkte Tauschen -->
                <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                    <div>
                        <div class="font-medium text-gray-800">Punkte tauschen</div>
                        <div class="text-sm text-gray-600">Tausche mit anderem Spieler</div>
                    </div>
                    <div>
                        {% if can_use_swap_joker %}
                            <a href="{{ path('app_player_joker_swap', {olympixId: olympix.id, playerId: player.id}) }}" 
                               class="btn-joker text-sm">
                                ‚áÑ Einsetzen
                            </a>
                        {% elseif not player.hasJokerSwapAvailable %}
                            <span class="text-sm text-gray-500">‚úó Verwendet</span>
                        {% else %}
                            <span class="text-sm text-gray-500">‚è≥ Warten auf Spielende</span>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Aktuelles Spiel -->
        {% if current_game %}
            <div class="player-card p-6">
                <h2 class="text-lg font-bold text-gray-800 mb-4">üéÆ Aktuelles Spiel</h2>
                <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                    <div class="font-medium text-green-800">{{ current_game.name }}</div>
                    <div class="text-sm text-green-600 capitalize">{{ current_game.gameType|replace({'_': ' '}) }}</div>
                    <div class="mt-2">
                        <span class="inline-block px-2 py-1 bg-green-100 text-green-800 rounded-full text-xs">
                            ‚ñ∂Ô∏è L√ÑUFT
                        </span>
                    </div>
                </div>
            </div>
        {% endif %}
        
        <!-- Rangliste -->
        <div class="player-card p-6">
            <h2 class="text-lg font-bold text-gray-800 mb-4">üèÜ Live-Rangliste</h2>
            <div class="space-y-2">
                {% for p in players %}
                    <div class="flex items-center justify-between p-2 {% if p.id == player.id %}bg-blue-50 border-2 border-blue-200{% else %}bg-gray-50{% endif %} rounded-lg">
                        <div class="flex items-center space-x-3">
                            <div class="w-6 h-6 bg-gray-200 rounded-full flex items-center justify-center text-sm font-bold">
                                {{ loop.index }}
                            </div>
                            <div class="font-medium {% if p.id == player.id %}text-blue-800{% else %}text-gray-800{% endif %}">
                                {{ p.name }}
                                {% if p.id == player.id %}<span class="text-blue-600">(Du)</span>{% endif %}
                            </div>
                        </div>
                        <div class="font-bold {% if p.id == player.id %}text-blue-800{% else %}text-gray-800{% endif %}">
                            {{ p.totalPoints }}
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
        
        <!-- Navigation -->
        <div class="player-card p-4">
            <div class="flex space-x-2">
                <a href="{{ path('app_player_access', {olympixId: olympix.id}) }}" 
                   class="flex-1 text-center py-2 px-4 bg-gray-100 text-gray-700 rounded-lg">
                    ‚Üê Zur√ºck
                </a>
                <button onclick="refreshData()" 
                        class="flex-1 text-center py-2 px-4 bg-blue-100 text-blue-700 rounded-lg">
                    üîÑ Aktualisieren
                </button>
            </div>
        </div>
    </div>

    <script>
        // Auto-refresh alle 10 Sekunden
        function refreshData() {
            fetch(`/api/player/{{ olympix.id }}/{{ player.id }}/status`)
                .then(response => response.json())
                .then(data => {
                    // Punkte aktualisieren
                    document.querySelector('.text-4xl.font-bold.text-blue-600').textContent = data.player.total_points;
                    
                    // Rangliste aktualisieren
                    updateRanking(data.ranking);
                })
                .catch(error => console.error('Fehler beim Laden:', error));
        }
        
        function updateRanking(ranking) {
            // Rangliste HTML aktualisieren
            // Vereinfacht - komplexere Logik m√∂glich
            location.reload();
        }
        
        // Auto-refresh starten
        setInterval(refreshData, 10000);
    </script>
</body>
</html>